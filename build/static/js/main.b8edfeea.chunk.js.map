{"version":3,"sources":["pages/login/index.jsx","pages/select/index.jsx","pages/add/index.jsx","pages/alter/index.jsx","pages/delete/index.jsx","index.js"],"names":["HomePage","props","state","name","passwd","loadings","e","this","setState","target","value","history","push","alert","className","title","bordered","style","width","height","headStyle","textAlign","bodyStyle","display","justifyContent","alignItems","direction","onChange","onChangeName","bind","placeholder","prefix","UserOutlined","Password","onChangePasswd","EditOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","type","loading","onClick","enterLoading","React","Component","Option","Selector","Select","data","columns","getContent","item","key","console","log","path","dataIndex","render","text","id","indexOf","fetch","method","dataType","then","response","json","catch","err","Header","Layout","Content","theme","mode","defaultSelectedKeys","Item","go","padding","defaultValue","choose","dataSource","Add","showModal","handleCancel","errorMessage","values","substring","length","body","pathUrl","getPathUrl","refresh","undefined","sqlMessage","message","error","success","ShowAlert","description","closable","showIcon","onClose","layout","labelCol","span","wrapperCol","ModalForm","onCancel","Form","useForm","form","onOk","submit","initialValues","remember","label","rules","required","Provider","onFormFinish","forms","postContent","Delete","record","size","onClickRow","getPathUrlAlter","alterContent","deleteContent","stu_num","cour_num","stu_numC","cour_numC","onConfirm","cancel","okText","cancelText","ReactDOM","component","Login","Alter","from","to","document","getElementById"],"mappings":"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","file":"static/js/main.b8edfeea.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\nimport { Input, Space, Card, Button } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone, UserOutlined, EditOutlined } from '@ant-design/icons';\nimport 'antd/es/input/style/css'\nimport 'antd/es/space/style/css'\nimport 'antd/es/card/style/css'\nimport 'antd/es/button/style/css'\n// eslint-disable-next-line\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            passwd: '',\n            loadings: false\n        };\n\n    }\n\n    onChangeName(e){\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    onChangePasswd(e){\n        this.setState({\n            passwd: e.target.value\n        })\n    }\n\n    enterLoading() {\n        this.setState({\n            loadings: true\n        },()=> {\n            if(this.state.name===\"admin\" && this.state.passwd===\"123456\"){\n                this.props.history.push('/select');\n            } else{\n                alert(\"密码或账户名错误！\")\n                this.setState({\n                    loadings: false\n                })\n            }\n            }\n        );\n\n    };\n\n    render() {\n        return (\n            <div className='background'>\n                <div className='card'>\n            <Card title=\"用户登陆\" bordered={false} style={{ width: 400, height: 300 }}\n                  headStyle={{textAlign: \"center\"}}\n                  bodyStyle={{display: \"flex\",justifyContent:\"center\",alignItems:\"center\"}}\n            >\n                <Space direction=\"vertical\">\n                <Input onChange={this.onChangeName.bind(this)} placeholder=\"input name\" prefix={<UserOutlined />} style={{width: 250}} className='input1'/>\n                <Input.Password\n                    value={this.state.passwd}\n                    onChange={this.onChangePasswd.bind(this)}\n                    placeholder=\"input password\"\n                    className='input'\n                    prefix={<EditOutlined/>}\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                />\n                    <Button className='button' type=\"primary\" loading={this.state.loadings} onClick={() => this.enterLoading()}>\n                        Click me!\n                    </Button>\n            </Space>\n            </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport { Layout, Menu, Table, Select as Selector  } from 'antd';\nimport 'antd/es/table/style/css'\nimport 'antd/es/tag/style/css'\nimport 'antd/es/space/style/css'\nimport 'antd/es/layout/style/css'\nimport 'antd/es/menu/style/css'\nimport 'antd/es/select/style/css'\nimport './index.scss';\n\nconst {Option} = Selector\n\nclass Select extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: []\n        };\n        this.getContent = this.getContent.bind(this)\n    }\n\n    go({item, key}){\n        console.log(123)\n        switch(key){\n            case \"1\": this.props.history.push('/select'); break;\n            case \"2\": this.props.history.push('/add'); break;\n            case \"3\": this.props.history.push('/alter'); break;\n            default: this.props.history.push('/delete'); break;\n        }\n\n    }\n    componentDidMount() {\n        this.getContent(\"student\")\n    }\n\n    getContent(path){\n        const columnsStu = [\n            {\n                title: '学号',\n                dataIndex: 'stu_num',\n                key: 'stu_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name'\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                key: 'age'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                key: 'sex'\n            },\n            {\n                title: '所在系',\n                dataIndex: 'depart',\n                key: 'depart'\n            }\n        ]\n        const columnsCou = [\n            {\n                title: '课程号',\n                dataIndex: 'cour_num',\n                key: 'cour_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程名',\n                dataIndex: 'cour_name',\n                key: 'cour_name'\n            },\n            {\n                title: '先行课',\n                dataIndex: 'pre',\n                key: 'pre'\n            }\n\n        ]\n        const columnsCho = [\n            {\n                title: '学号',\n                dataIndex: 'stu_numC',\n                key: 'stu_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程号',\n                dataIndex: 'cour_numC',\n                key: 'cour_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '成绩',\n                dataIndex: 'grade',\n                key: 'grade'\n            }\n        ]\n        const columns = [columnsStu, columnsCou, columnsCho]\n        let id = [\"student\", \"course\", \"choose\"].indexOf(path)\n        fetch('http://112.124.25.19:3000/' + 'get' + path,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                response.json().then((data)=>{\n                    this.setState({\n                        columns: columns[id],\n                        data: data\n                    })\n                }).bind(this);\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n    choose(value){\n        this.getContent(value)\n    }\n\n    render() {\n        const { Header, Content } = Layout;\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" onClick={this.go.bind(this)}>查询</Menu.Item>\n                        <Menu.Item key=\"2\" onClick={this.go.bind(this)}>增加</Menu.Item>\n                        <Menu.Item key=\"3\" onClick={this.go.bind(this)}>修改</Menu.Item>\n                        <Menu.Item key=\"4\" onClick={this.go.bind(this)}>删除</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    请选择数据表：\n                    <Selector className='select' defaultValue=\"student\" style={{ width: 120 }} onChange={this.choose.bind(this)}>\n                        <Option value=\"student\">学生表</Option>\n                        <Option value=\"course\">课程表</Option>\n                        <Option value=\"choose\">选课表</Option>\n                    </Selector>\n                    <Table columns={this.state.columns} dataSource={this.state.data} />\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default Select;\n","import React from 'react';\nimport { Modal, Form, Input, message, Layout, Menu, Table, Button, Alert, Select as Selector } from 'antd';\nimport 'antd/es/alert/style/css'\nimport 'antd/es/message/style/css'\nimport 'antd/es/modal/style/css'\nimport 'antd/es/form/style/css'\nimport 'antd/es/input/style/css'\nimport 'antd/es/radio/style/css'\nimport 'antd/es/table/style/css'\nimport 'antd/es/tag/style/css'\nimport 'antd/es/space/style/css'\nimport 'antd/es/layout/style/css'\nimport 'antd/es/menu/style/css'\nimport 'antd/es/select/style/css'\nimport 'antd/es/button/style/css'\nimport './index.scss';\n\nconst {Option} = Selector\n\nclass Add extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            columns: [],\n            visible: false,\n            errorMessage: ''\n        };\n        this.getContent = this.getContent.bind(this)\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n    go({item, key}){\n        console.log(123)\n        switch(key){\n            case \"1\": this.props.history.push('/select'); break;\n            case \"2\": this.props.history.push('/add'); break;\n            case \"3\": this.props.history.push('/alter'); break;\n            default: this.props.history.push('/delete'); break;\n        }\n\n    }\n    componentDidMount() {\n        this.getContent(\"student\")\n    }\n\n    getContent(path){\n        const columnsStu = [\n            {\n                title: '学号',\n                dataIndex: 'stu_num',\n                key: 'stu_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name'\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                key: 'age'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                key: 'sex'\n            },\n            {\n                title: '所在系',\n                dataIndex: 'depart',\n                key: 'depart'\n            }\n        ]\n        const columnsCou = [\n            {\n                title: '课程号',\n                dataIndex: 'cour_num',\n                key: 'cour_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程名',\n                dataIndex: 'cour_name',\n                key: 'cour_name'\n            },\n            {\n                title: '先行课',\n                dataIndex: 'pre',\n                key: 'pre'\n            }\n\n        ]\n        const columnsCho = [\n            {\n                title: '学号',\n                dataIndex: 'stu_numC',\n                key: 'stu_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程号',\n                dataIndex: 'cour_numC',\n                key: 'cour_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '成绩',\n                dataIndex: 'grade',\n                key: 'grade'\n            }\n        ]\n        const columns = [columnsStu, columnsCou, columnsCho]\n        let id = [\"student\", \"course\", \"choose\"].indexOf(path)\n        fetch('http://112.124.25.19:3000/' + 'get' + path,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                response.json().then((data)=>{\n                    this.setState({\n                        columns: columns[id],\n                        data: data,\n                        id: id\n                    })\n                }).bind(this);\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n    getPathUrl(values){\n        let path = '?'\n        for (let key in values){\n            path = path + key\n            path = path + '='\n            path = path + values[key]\n            path = path + '&'\n        }\n        path=path.substring(0,path.length-1)\n        console.log(path)\n        return path\n    }\n\n\n    postContent(body){\n        let pathUrl = this.getPathUrl(body)\n        let target = ['addStudent', 'addCourse', 'addChoose'][this.state.id]\n        let refresh = [\"student\", \"course\", \"choose\"][this.state.id]\n        // console.log('http://127.0.0.1:3000/' + target + pathUrl)\n        fetch('http://112.124.25.19:3000/' + target + pathUrl,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                console.log(response)\n                response.json().then((data)=>{\n                    console.log(data)\n                    if(data.sqlMessage!= undefined) {\n                        this.setState({\n                            errorMessage: data.sqlMessage\n                        })\n                        message.error(\"增加失败\")\n                    } else {\n                        message.success('增加成功!');\n                        this.getContent(refresh)\n                    }\n                })\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n    choose(value){\n        this.getContent(value)\n    }\n\n    onFinish(value){\n        console.log(value)\n    }\n\n\n\n    render() {\n        const ShowAlert = ({message}) => {\n            if(message != ''){\n                return (\n                    <Alert\n                        message=\"操作失败\"\n                        description={message}\n                        type=\"error\"\n                        closable\n                        showIcon\n                        onClose={()=>{\n                            this.setState({\n                                errorMessage: ''\n                            })\n                        }}\n                    />\n                )\n            } else {\n                return (<div></div>)\n            }\n        }\n\n        const layout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 16 },\n        };\n        const { Header, Content } = Layout;\n\n        const ModalForm = ({ visible, onCancel}) => {\n            const [form] = Form.useForm()\n\n            const onOK = () => {\n                form.submit()\n            }\n            return (\n                <Modal\n                    title=\"增加数据\"\n                    visible={visible}\n                    onOk={onOK}\n                    onCancel={onCancel}\n                >\n                  {this.state.id === 0 ?\n                    <Form\n                        {...layout}\n                        name=\"userForm\"\n                        initialValues={{\n                            remember: true\n                        }}\n                        form={form}\n                        // onFinish={onFinish}\n                        // onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"学号\"\n                            name=\"stu_num\"\n                            rules={[{ required: true, message: 'Please input your stu_num!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"姓名\"\n                            name=\"name\"\n                            rules={[{ required: true, message: 'Please input your name!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"年龄\"\n                            name=\"age\"\n                        >\n                            <Input />\n                        </Form.Item>\n\n\n                        <Form.Item\n                            label=\"性别\"\n                            name=\"sex\"\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"所在系\"\n                            name=\"depart\"\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Form> : null}\n\n                    {this.state.id === 1 ?\n                    <Form\n                        {...layout}\n                        name=\"userForm\"\n                        initialValues={{ remember: true }}\n                        form={form}\n                        // onFinish={onFinish}\n                        // onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"课程号\"\n                            name=\"cour_num\"\n                            rules={[{ required: true, message: 'Please input your cour_num!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"课程名\"\n                            name=\"cour_name\"\n                            rules={[{ required: true, message: 'Please input your cour_name!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"先行课\"\n                            name=\"age\"\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Form> : null}\n\n                    {this.state.id === 2 ?\n                        <Form\n                            {...layout}\n                            name=\"userForm\"\n                            initialValues={{ remember: true }}\n                            form={form}\n                            // onFinish={onFinish}\n                            // onFinishFailed={onFinishFailed}\n                        >\n                            <Form.Item\n                                label=\"学号\"\n                                name=\"stu_numC\"\n                                rules={[{ required: true, message: 'Please input your cour_num!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"课程号\"\n                                name=\"cour_numC\"\n                                rules={[{ required: true, message: 'Please input your cour_name!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"成绩\"\n                                name=\"grade\"\n                                rules={[{ required: true, message: 'Please input your grade!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Form> : null}\n\n                </Modal>\n            )\n        }\n\n\n\n\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                        <Menu.Item key=\"1\" onClick={this.go.bind(this)}>查询</Menu.Item>\n                        <Menu.Item key=\"2\" onClick={this.go.bind(this)}>增加</Menu.Item>\n                        <Menu.Item key=\"3\" onClick={this.go.bind(this)}>修改</Menu.Item>\n                        <Menu.Item key=\"4\" onClick={this.go.bind(this)}>删除</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    请选择数据表：\n                    <Selector defaultValue=\"student\" style={{ width: 120 }} onChange={this.choose.bind(this)}>\n                        <Option value=\"student\">学生表</Option>\n                        <Option value=\"course\">课程表</Option>\n                        <Option value=\"choose\">选课表</Option>\n                    </Selector>\n\n\n                    <Form.Provider\n                        onFormFinish={(name, { values, forms }) => {\n                            this.postContent(values)\n                            this.handleCancel()\n                        }}>\n                    <Button className='button' type=\"primary\" onClick={this.showModal}>点我增加数据</Button>\n                        <ModalForm visible={this.state.visible} onCancel={this.handleCancel}/>\n\n                    </Form.Provider>\n\n\n                    <ShowAlert message={this.state.errorMessage}></ShowAlert>\n\n\n                    <Table columns={this.state.columns} dataSource={this.state.data} />\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default Add;\n","import React from 'react';\nimport { Modal, Form, Input, message, Select as Selector, Table, Space, Layout, Menu } from 'antd';\nimport 'antd/es/button/style/css'\nimport 'antd/es/modal/style/css'\nimport 'antd/es/form/style/css'\nimport 'antd/es/input/style/css'\nimport 'antd/es/radio/style/css'\nimport 'antd/es/table/style/css'\nimport 'antd/es/tag/style/css'\nimport 'antd/es/space/style/css'\nimport 'antd/es/layout/style/css'\nimport 'antd/es/menu/style/css'\nimport 'antd/es/popconfirm/style/css'\nimport 'antd/es/message/style/css'\nimport 'antd/es/select/style/css'\nimport './index.scss';\n\nconst {Option} = Selector\n\n\nclass Delete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: [],\n            id: 0,\n            visible: false,\n            record: []\n        };\n        this.getContent = this.getContent.bind(this)\n    }\n\n    go({item, key}){\n        console.log(123)\n        switch(key){\n            case \"1\": this.props.history.push('/select'); break;\n            case \"2\": this.props.history.push('/add'); break;\n            case \"3\": this.props.history.push('/alter'); break;\n            default: this.props.history.push('/delete'); break;\n        }\n\n    }\n    componentDidMount() {\n        this.getContent(\"student\")\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n\n    onClickRow(record){\n        this.setState({\n            record: record\n        },()=>{\n            console.log(record)\n            this.showModal()\n        })\n    }\n\n\n\n    getContent(path){\n        const columnsStu = [\n            {\n                title: '学号',\n                dataIndex: 'stu_num',\n                key: 'stu_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name'\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                key: 'age'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                key: 'sex'\n            },\n            {\n                title: '所在系',\n                dataIndex: 'depart',\n                key: 'depart'\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <Space size=\"middle\">\n                            <a onClick={this.onClickRow.bind(this,record)}>修改</a>\n                    </Space>\n                ),\n            },\n        ]\n        const columnsCou = [\n            {\n                title: '课程号',\n                dataIndex: 'cour_num',\n                key: 'cour_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程名',\n                dataIndex: 'cour_name',\n                key: 'cour_name'\n            },\n            {\n                title: '先行课',\n                dataIndex: 'pre',\n                key: 'pre'\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <Space size=\"middle\">\n                            <a>修改</a>\n                    </Space>\n                ),\n            },\n\n        ]\n        const columnsCho = [\n            {\n                title: '学号',\n                dataIndex: 'stu_numC',\n                key: 'stu_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程号',\n                dataIndex: 'cour_numC',\n                key: 'cour_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '成绩',\n                dataIndex: 'grade',\n                key: 'grade'\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <Space size=\"middle\">\n                            <a>修改</a>\n                    </Space>\n                ),\n            },\n        ]\n        const columns = [columnsStu, columnsCou, columnsCho]\n        let id = [\"student\", \"course\", \"choose\"].indexOf(path)\n        fetch('http://112.124.25.19:3000/' + 'get' + path,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                response.json().then((data)=>{\n                    this.setState({\n                        columns: columns[id],\n                        data: data,\n                        id: id\n                    })\n                }).bind(this);\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n    getPathUrlAlter(values){\n        let path = '?'\n        for (let key in values){\n            path = path + key\n            path = path + '='\n            path = path + values[key]\n            path = path + '&'\n        }\n        path=path.substring(0,path.length-1)\n        console.log(path)\n        return path\n    }\n\n\n    alterContent(body){\n        let refresh = [\"student\", \"course\", \"choose\"][this.state.id]\n        let target = [\"updateStudent\", \"updateCourse\", \"updateChoose\"][this.state.id]\n        let path = this.getPathUrlAlter(body)\n        fetch('http://112.124.25.19:3000/'  + target + path,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                // response.json().then((data)=>{\n                //     console.log(data)\n                // }).bind(this);\n                message.success('修改成功!');\n                this.getContent(refresh)\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n    choose(value){\n        this.getContent(value)\n    }\n\n    render() {\n        const ModalForm = ({ visible, onCancel}) => {\n            const [form] = Form.useForm()\n\n            const onOK = () => {\n                form.submit()\n            }\n            return (\n                <Modal\n                    title=\"修改数据\"\n                    visible={visible}\n                    onOk={onOK}\n                    onCancel={onCancel}\n                >\n                    {this.state.id === 0 ?\n                        <Form\n                            {...layout}\n                            name=\"userForm\"\n                            initialValues={this.state.record}\n                            form={form}\n                            // onFinish={onFinish}\n                            // onFinishFailed={onFinishFailed}\n                        >\n                            <Form.Item\n                                label=\"学号\"\n                                name=\"stu_num\"\n                                rules={[{ required: true, message: 'Please input your stu_num!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"姓名\"\n                                name=\"name\"\n                                rules={[{ required: true, message: 'Please input your name!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"年龄\"\n                                name=\"age\"\n                            >\n                                <Input />\n                            </Form.Item>\n\n\n                            <Form.Item\n                                label=\"性别\"\n                                name=\"sex\"\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"所在系\"\n                                name=\"depart\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Form> : null}\n\n                    {this.state.id === 1 ?\n                        <Form\n                            {...layout}\n                            name=\"userForm\"\n                            initialValues={this.state.record}\n                            form={form}\n                            // onFinish={onFinish}\n                            // onFinishFailed={onFinishFailed}\n                        >\n                            <Form.Item\n                                label=\"课程号\"\n                                name=\"cour_num\"\n                                rules={[{ required: true, message: 'Please input your cour_num!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"课程名\"\n                                name=\"cour_name\"\n                                rules={[{ required: true, message: 'Please input your cour_name!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"先行课\"\n                                name=\"pre\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Form> : null}\n\n                    {this.state.id === 2 ?\n                        <Form\n                            {...layout}\n                            name=\"userForm\"\n                            initialValues={this.state.record}\n                            form={form}\n                            // onFinish={onFinish}\n                            // onFinishFailed={onFinishFailed}\n                        >\n                            <Form.Item\n                                label=\"学号\"\n                                name=\"stu_numC\"\n                                rules={[{ required: true, message: 'Please input your cour_num!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"课程号\"\n                                name=\"cour_numC\"\n                                rules={[{ required: true, message: 'Please input your cour_name!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"成绩\"\n                                name=\"grade\"\n                                rules={[{ required: true, message: 'Please input your grade!' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Form> : null}\n\n                </Modal>\n            )\n        }\n        const { Header, Content } = Layout;\n\n        const layout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 16 },\n        };\n\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['3']}>\n                        <Menu.Item key=\"1\" onClick={this.go.bind(this)}>查询</Menu.Item>\n                        <Menu.Item key=\"2\" onClick={this.go.bind(this)}>增加</Menu.Item>\n                        <Menu.Item key=\"3\" onClick={this.go.bind(this)}>修改</Menu.Item>\n                        <Menu.Item key=\"4\" onClick={this.go.bind(this)}>删除</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    请选择数据表：\n                    <Selector className='select' defaultValue=\"student\" style={{ width: 120 }} onChange={this.choose.bind(this)}>\n                        <Option value=\"student\">学生表</Option>\n                        <Option value=\"course\">课程表</Option>\n                        <Option value=\"choose\">选课表</Option>\n                    </Selector>\n\n                    <Form.Provider\n                        onFormFinish={(name, { values, forms }) => {\n                            this.alterContent(values)\n                            this.handleCancel()\n                        }}>\n                        <ModalForm visible={this.state.visible} onCancel={this.handleCancel}/>\n\n                    </Form.Provider>\n\n\n                    <Table columns={this.state.columns} dataSource={this.state.data}\n                        // onRow={this.onClickRow.bind(this)}\n                    />\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default Delete;\n","import React from 'react';\nimport { Layout, Menu, Table, Space, Alert, Select as Selector, Popconfirm, message  } from 'antd';\nimport 'antd/es/table/style/css'\nimport 'antd/es/tag/style/css'\nimport 'antd/es/space/style/css'\nimport 'antd/es/layout/style/css'\nimport 'antd/es/menu/style/css'\nimport 'antd/es/popconfirm/style/css'\nimport 'antd/es/message/style/css'\nimport 'antd/es/alert/style/css'\nimport 'antd/es/select/style/css'\nimport './index.scss';\n\n\nconst {Option} = Selector\n\n\nclass Delete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: [],\n            id: 0,\n            alert: false,\n            errorMessage: ''\n        };\n        this.getContent = this.getContent.bind(this)\n        this.deleteContent = this.deleteContent.bind(this)\n    }\n\n    go({item, key}){\n        console.log(123)\n        switch(key){\n            case \"1\": this.props.history.push('/select'); break;\n            case \"2\": this.props.history.push('/add'); break;\n            case \"3\": this.props.history.push('/alter'); break;\n            default: this.props.history.push('/delete'); break;\n        }\n\n    }\n    componentDidMount() {\n        this.getContent(\"student\")\n    }\n\n\n    onClose(){\n        console.log('我关闭了')\n    }\n\n    deleteContent(path){\n        let pathUrl = ''\n        let refresh = [\"student\", \"course\", \"choose\"][this.state.id]\n        switch (this.state.id){\n            case 0: pathUrl = pathUrl + 'deleteStudent?stu_num=' + path.stu_num;break;\n            case 1: pathUrl = pathUrl + 'deleteCourse?cour_num=' + path.cour_num;break;\n            default: pathUrl = pathUrl + 'deleteChoose?stu_numC=' + path.stu_numC + '&cour_numC=' + path.cour_numC;break;\n        }\n        console.log(pathUrl)\n        fetch('http://112.124.25.19:3000/'  + pathUrl,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                console.log(response)\n                response.json().then((data)=>{\n                    console.log(data)\n                    if(data.sqlMessage!== undefined) {\n                        this.setState({\n                            errorMessage: data.sqlMessage\n                        })\n                        message.error(\"删除失败\")\n                    } else {\n                        message.success('删除成功!');\n                        this.getContent(refresh)\n                    }\n                })\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n\n\n\n    cancel(e) {\n        console.log(e);\n        message.error('取消删除！');\n    }\n\n    getContent(path){\n        const columnsStu = [\n            {\n                title: '学号',\n                dataIndex: 'stu_num',\n                key: 'stu_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name'\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                key: 'age'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                key: 'sex'\n            },\n            {\n                title: '所在系',\n                dataIndex: 'depart',\n                key: 'depart'\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <Space size=\"middle\">\n                        <Popconfirm\n                            title=\"确定删除这条记录吗？\"\n                            onConfirm={()=>{this.deleteContent(record)}}\n                            onCancel={this.cancel}\n                            okText=\"确定\"\n                            cancelText=\"取消\"\n                        >\n                        <a>删除</a>\n                        </Popconfirm>\n                    </Space>\n                ),\n            },\n        ]\n        const columnsCou = [\n            {\n                title: '课程号',\n                dataIndex: 'cour_num',\n                key: 'cour_num',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程名',\n                dataIndex: 'cour_name',\n                key: 'cour_name'\n            },\n            {\n                title: '先行课',\n                dataIndex: 'pre',\n                key: 'pre'\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <Space size=\"middle\">\n                        <Popconfirm\n                            title=\"确定删除这条记录吗？\"\n                            onConfirm={()=>{this.deleteContent(record)}}\n                            onCancel={this.cancel}\n                            okText=\"确定\"\n                            cancelText=\"取消\"\n                        >\n                            <a>删除</a>\n                        </Popconfirm>\n                    </Space>\n                ),\n            },\n\n        ]\n        const columnsCho = [\n            {\n                title: '学号',\n                dataIndex: 'stu_numC',\n                key: 'stu_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '课程号',\n                dataIndex: 'cour_numC',\n                key: 'cour_numC',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: '成绩',\n                dataIndex: 'grade',\n                key: 'grade'\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <Space size=\"middle\">\n                        <Popconfirm\n                            title=\"确定删除这条记录吗？\"\n                            onConfirm={()=>{this.deleteContent(record)}}\n                            onCancel={this.cancel}\n                            okText=\"确定\"\n                            cancelText=\"取消\"\n                        >\n                            <a>删除</a>\n                        </Popconfirm>\n                    </Space>\n                ),\n            },\n        ]\n        const columns = [columnsStu, columnsCou, columnsCho]\n        let id = [\"student\", \"course\", \"choose\"].indexOf(path)\n        fetch('http://112.124.25.19:3000/' + 'get' + path,{\n            method: 'GET',\n            // body:formData,\n            dataType: \"text\"\n        }).then(\n            (response)=>{\n                response.json().then((data)=>{\n                    this.setState({\n                        columns: columns[id],\n                        data: data,\n                        id: id\n                    })\n                }).bind(this);\n            }\n        ).catch(function(err){\n            console.log(\"Fetch错误:\"+err);\n        });\n    }\n\n    choose(value){\n        this.getContent(value)\n    }\n\n    render() {\n        const ShowAlert = ({message}) => {\n            if(message !== ''){\n                return (\n                    <Alert\n                        message=\"操作失败\"\n                        description={message}\n                        type=\"error\"\n                        closable\n                        showIcon\n                        onClose={()=>{\n                            this.setState({\n                                errorMessage: ''\n                            })\n                        }}\n                    />\n                )\n            } else {\n                return (<div></div>)\n            }\n        }\n        const { Header, Content } = Layout;\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['4']}>\n                        <Menu.Item key=\"1\" onClick={this.go.bind(this)}>查询</Menu.Item>\n                        <Menu.Item key=\"2\" onClick={this.go.bind(this)}>增加</Menu.Item>\n                        <Menu.Item key=\"3\" onClick={this.go.bind(this)}>修改</Menu.Item>\n                        <Menu.Item key=\"4\" onClick={this.go.bind(this)}>删除</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    请选择数据表：\n                    <Selector className='select' defaultValue=\"student\" style={{ width: 120 }} onChange={this.choose.bind(this)}>\n                        <Option value=\"student\">学生表</Option>\n                        <Option value=\"course\">课程表</Option>\n                        <Option value=\"choose\">选课表</Option>\n                    </Selector>\n                    <ShowAlert message={this.state.errorMessage}></ShowAlert>\n                    <Table columns={this.state.columns} dataSource={this.state.data}\n                           // onRow={this.onClickRow.bind(this)}\n                    />\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default Delete;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './pages/login';\nimport Select from \"./pages/select\"\nimport Add from \"./pages/add\"\nimport Alter from \"./pages/alter\"\nimport Delete from \"./pages/delete\"\n\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n      <Router>\n      <Switch>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/select\" component={Select}/>\n          <Route path=\"/add\" component={Add}/>\n          <Route path=\"/alter\" component={Alter}/>\n          <Route path=\"/delete\" component={Delete}/>\n          <Redirect from=\"/\" to=\"/login\"/>\n      </Switch>\n      </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}